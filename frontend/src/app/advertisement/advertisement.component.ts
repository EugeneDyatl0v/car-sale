import { Component } from '@angular/core';
import {NgIf, NgOptimizedImage} from "@angular/common";

@Component({
  selector: 'app-advertisement',
  standalone: true,
  imports: [
    NgOptimizedImage,
    NgIf
  ],
  templateUrl: './advertisement.component.html',
  styleUrl: './advertisement.component.css'
})
export class AdvertisementComponent {
  imageUrl: string | null = null;
  title:string = 'Audi Q7';
  description:string = '`px` и `vh` — это единицы измерения, используемые в CSS для задания размеров и расстояний. Вот основные различия между ними:\n' +
    '\n' +
    '### 1. Пиксели (px)\n' +
    '\n' +
    '- **Определение**: `px` (пиксель) — это фиксированная единица измерения, которая соответствует одному пикселю на экране. Пиксели являются абсолютной единицей, и их размер не зависит от других элементов на странице или от размера окна браузера.\n' +
    '  \n' +
    '- **Использование**: Пиксели часто используются для задания размеров шрифтов, отступов, границ и других элементов дизайна. Например:\n' +
    '  ```css\n' +
    '  .element {\n' +
    '      width: 200px; /* фиксированная ширина в пикселях */\n' +
    '      height: 100px; /* фиксированная высота в пикселях */\n' +
    '      font-size: 16px; /* фиксированный размер шрифта */\n' +
    '  }\n' +
    '  ```\n' +
    '\n' +
    '- **Преимущества**:\n' +
    '  - Предсказуемость: размеры в пикселях всегда будут одинаковыми на всех экранах.\n' +
    '  - Точная настройка: позволяет точно управлять размерами элементов.\n' +
    '\n' +
    '- **Недостатки**:\n' +
    '  - Не адаптивность: фиксированные размеры могут привести к проблемам с адаптивностью на устройствах с разными размерами экранов.\n' +
    '\n' +
    '### 2. Вьюпортные единицы (vh, vw)\n' +
    '\n' +
    '- **Определение**: `vh` (viewport height) — это единица измерения, основанная на высоте окна браузера (вьюпорта). 1 `vh` равен 1% от высоты вьюпорта. То есть, если высота окна браузера составляет 1000 пикселей, то 1 `vh` равен 10 пикселям.\n' +
    '\n' +
    '- **Использование**: `vh` часто используется для задания размеров, которые должны адаптироваться к высоте окна, например, для создания полноэкранных секций или адаптивных элементов. Например:\n' +
    '  ```css\n' +
    '  .element {\n' +
    '      height: 50vh; /* высота элемента равна 50% от высоты вьюпорта */\n' +
    '      font-size: 5vh; /* размер шрифта равен 5% от высоты вьюпорта */\n' +
    '  }\n' +
    '  ```\n' +
    '\n' +
    '- **Преимущества**:\n' +
    '  - Адаптивность: размеры в `vh` автоматически меняются в зависимости от размера окна, что помогает создавать более адаптивный дизайн.\n' +
    '  - Простота в использовании: удобно использовать для создания полноэкранных элементов или секций.\n' +
    '\n' +
    '- **Недостатки**:\n' +
    '  - Не всегда предсказуемы: размеры могут меняться при изменении размеров окна браузера, что может привести к неожиданным результатам.\n' +
    '\n' +
    '### Пример\n' +
    '\n' +
    'Допустим, у вас есть элемент, который должен занимать половину высоты окна браузера, и вы хотите установить фиксированный размер шрифта:\n' +
    '\n' +
    '```css\n' +
    '.container {\n' +
    '    height: 50vh; /* Высота равна 50% от высоты вьюпорта */\n' +
    '    background-color: lightblue;\n' +
    '}\n' +
    '\n' +
    '.text {\n' +
    '    font-size: 20px; /* Фиксированный размер шрифта */\n' +
    '}\n' +
    '```\n' +
    '\n' +
    'В этом примере `.container` будет занимать половину высоты окна браузера независимо от того, насколько высоко оно. Однако размер шрифта `.text` всегда будет 20 пикселей, независимо от размеров окна.\n' +
    '\n' +
    '### Заключение\n' +
    '\n' +
    '- Используйте `px` для фиксированных размеров, когда вам нужно точное управление элементами.\n' +
    '- Используйте `vh` (и `vw` — для ширины вьюпорта) для создания адаптивного дизайна, который подстраивается под размер окна браузера.\n' +
    '\n' +
    'Таким образом, выбор между `px` и `vh` зависит от того, какой эффект вы хотите достичь и как ваши элементы должны реагировать на изменения размеров экрана.';
  price:number = 1000;
  brand:string = 'Audi';
  model:string = 'Q7';
  year:number = 2024;
  mileage:number = 1000;
  fuel_type:string = 'diesel';
  transmission:string = 'automatic transmission';
  body_type:string = 'crossover';
  engine_capacity:number = 2.5;
  horse_power:number = 300;
  drive_type:string = 'full';
  color:string = 'black';
  seller_name:string = 'Nikita';
  seller_phone:string = '+375296786094';
  seller_email:string = 'neverdoit01@gmail.com';
  location:string = 'Minsk';
  posted_date:string = '11.11.2024';
  vin_number:string = 'dskfjksd';
  info: string = '';
  clicked:boolean = false;

  on_click_phone() {
    console.log('a');
    this.info = this.seller_phone;
    this.clicked = true;
  }


  on_click_email() {
    console.log('a');
    this.info = this.seller_email;
    this.clicked = true;
  }
}
